'''
Script:  First Script
Author:  Mike Sword
Date:    January 2021
Version: .007
Purpose: File Metadata Extractr

'''

''' IMPORT STANDARD LIBRARIES '''
import os       # File System Methods
import sys      # System Methods
import time     # Time Conversion Methods

''' IMPORT 3RD PARTY LIBRARIES '''
# NONE

''' DEFINE PSEUDO CONSTANTS '''

# NONE

''' LOCAL FUNCTIONS '''

def GetFileMetaData(fileName):
    ''' 
        obtain filesystem metadata
        from the specified file
        specifically, fileSize and MAC Times
        
        return True, None, fileSize and MacTimeList
    '''
    try:
        
        metaData         = os.stat(fileName)       # Use the stat method to obtain meta data
        fileSize         = metaData.st_size        # Extract fileSize and MAC Times
        timeLastAccess   = metaData.st_atime
        timeLastModified = metaData.st_mtime
        timeCreated      = metaData.st_ctime
        
        macTimeList = [timeLastModified, timeLastAccess, timeCreated] # Group the MAC Times in a List
        return True, None, fileSize, macTimeList
    
    except Exception as err:
        return False, str(err), None, None

''' LOCAL CLASSES '''
# NONE

''' MAIN ENTRY POINT '''

if __name__ == '__main__':
    
    print("\nWK-2 Solution: Mike Sword - Version .007\n")

    targetDIR = input('Enter a Directory Path i.e. c:/ >>> ')
    print()
    
    try:
        fileList = os.listdir(targetDIR)
        for eachFile in fileList:
            print("\nFile Name:", eachFile)
            path = os.path.join(targetDIR, eachFile)
            print("\nFile Path:", path)

            success, errInfo, fileSize, macList = GetFileMetaData(path)            
            
            print("\nSuccess?:", success)
            
            print("\nIf Error then what?:", errInfo)
            
            print("\nFile Size:",fileSize , " Bytes")
            
            print("\nInitial MAC Time List:", macList)
            
            # We need to convert the epoch times
            modEpoch = macList[0] # Take our modified time we already got, and converts it to utcTime
            utcTime = time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime(modEpoch))
            
            print("\nDate and Time Last Modified:", utcTime)
            
            accEpoch = macList[1] # Take our accessed time we already got, and converts it to utcTime
            utcTime = time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime(accEpoch))            
            
            print("\nDate and Time Last Accessed:", utcTime)
            
            creEpoch = macList[2] # Take our created time we already got, and converts it to utcTime
            utcTime = time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime(creEpoch))            
            
            print("\nDate and Time Created:", utcTime)
            
            print("="*60)
            
    except Exception as err:
        print("\n\nScript Aborted     ", "Exception =     ", err)
